@model IEnumerable<MiniInventoryManagementSystem.Models.Product>
@{
    ViewData["Title"] = "Product List";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-bold text-black border-bottom pb-2 mb-4">
            <i class="bi bi-box-seam me-2"></i> Product Inventory
        </h2>
        <a class="btn btn-success" asp-action="Create">
            <i class="bi bi-plus-circle me-1"></i> Add Product
        </a>
    </div>

    <div class="row g-2 mb-4">
        <div class="col-md-6">
            <form method="get" asp-controller="Products" asp-action="Index" class="d-flex">
                <input type="hidden" name="category" value="@ViewBag.SelectedCategory" />
                <input type="hidden" name="page" value="1" />
                <input type="text" name="searchName" class="form-control me-2"
                       placeholder="Search by product name"
                       value="@ViewBag.SearchName" />
                <button type="submit" class="btn btn-primary d-flex align-items-center">
                    <i class="bi bi-search me-1"></i> <span>Search</span>
                </button>
            </form>

        </div>

        <div class="col-md-6">
            <form method="get" asp-controller="Products" asp-action="Index" class="d-flex">
                <input type="hidden" name="searchName" value="@ViewBag.SearchName" />
                <input type="hidden" name="page" value="1" />
                <select name="category" class="form-select me-2">
                    @{
                        var allSelected = (ViewBag.SelectedCategory == "All") ? "selected=\"selected\"" : "";
                        var categories = ViewBag.Categories as List<string> ?? new List<string>();
                    }
                    @Html.Raw($"<option value=\"All\" {allSelected}>All Categories</option>")
                    @foreach (var cat in categories)
                    {
                        var selected = (cat == ViewBag.SelectedCategory) ? "selected=\"selected\"" : "";
                        @Html.Raw($"<option value=\"{cat}\" {selected}>{cat}</option>")
                    }
                </select>
                <button type="submit" class="btn btn-primary d-flex align-items-center">
                    <i class="bi bi-filter me-1"></i> <span>Filter</span>
                </button>
            </form>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-warning text-center fw-bold">
            @if (!string.IsNullOrEmpty(ViewBag.SelectedCategory) && ViewBag.SelectedCategory != "All")
            {
                <span>No Product found in "@ViewBag.SelectedCategory" Category!</span>
            }
            else if (!string.IsNullOrEmpty(ViewBag.SearchName))
            {
                <span>No Product found with the name "@ViewBag.SearchName"!</span>
            }
            else
            {
                <span>No Products found!</span>
            }
        </div>
    }
    else
    {
        <table class="table table-striped table-hover table-bordered">
            <thead class="table-dark">
                <tr>
                    <th scope="col">ID</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.First().Name)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.First().Category)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.First().Price)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.First().Quantity)</th>
                    <th scope="col">Stock Status</th>
                    <th scope="col" class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    string status = "";
                    string css = "";

                    if (item.Quantity == 0)
                    {
                        status = "Out of Stock";
                        css = "badge bg-danger";
                    }
                    else if (item.Quantity < 10)
                    {
                        status = "Low Stock";
                        css = "badge bg-warning text-dark";
                    }
                    else
                    {
                        status = "In Stock";
                        css = "badge bg-success";
                    }

                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Name</td>
                        <td>@item.Category</td>
                        <td>৳ @item.Price.ToString("N2")</td>
                        <td>@item.Quantity</td>
                        <td><span class="@css">@status</span></td>
                        <td class="text-center">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary me-1">
                                <i class="bi bi-pencil-square me-1"></i> Edit
                            </a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info text-white me-1">
                                <i class="bi bi-info-circle me-1"></i> Details
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">
                                <i class="bi bi-trash me-1"></i> Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <hr class="mt-4" style="border-top: 2px solid #dee2e6;" />

        @if (ViewBag.TotalPages > 1)
        {
            <div class="d-flex justify-content-end mt-2">
                <nav>
                    <ul class="pagination">
                        <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link"
                               href="@Url.Action("Index", new { searchName = ViewBag.SearchName, category = ViewBag.SelectedCategory, page = ViewBag.CurrentPage - 1 })">
                                Previous
                            </a>
                        </li>

                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                <a class="page-link"
                                   href="@Url.Action("Index", new { searchName = ViewBag.SearchName, category = ViewBag.SelectedCategory, page = i })">
                                    @i
                                </a>
                            </li>
                        }

                        <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                            <a class="page-link"
                               href="@Url.Action("Index", new { searchName = ViewBag.SearchName, category = ViewBag.SelectedCategory, page = ViewBag.CurrentPage + 1 })">
                                Next
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        }
    }
</div>
